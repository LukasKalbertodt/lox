version: 2.1

executors:
  lox-ci:
    docker:
      - image: lukaskalbertodt/lox-ci:2019-10-22
        environment:
          RUSTFLAGS: --deny warnings
    working_directory: /repo
  latest-rust:
    docker:
      - image: circleci/rust:latest

jobs:
  check_style:
    executor: latest-rust
    steps:
      - checkout
      - run: ./.circleci/check-basic-style.sh

  build:
    executor: lox-ci
    steps:
      - checkout
      # We only want to restore a cache that perfectly fits to the current
      # situation, meaning: same dependency graph, same compiler version, same
      # RUSTFLAGS. Disadvantage: if a single dependency updates, we have to
      # compile everything again. Advantage: our cache won't grow big with
      # stale artifacts.
      - run: cargo generate-lockfile  # we need `Cargo.lock` to lookup the cache
      - run: cp Cargo.lock compiler-fingerprint
      - run: echo $RUSTFLAGS >> compiler-fingerprint
      - run: echo $(rustc -V) >> compiler-fingerprint
      - restore_cache:
          keys:
            - cargo-cache-{{ checksum "compiler-fingerprint" }}
      - run: cargo build --all
      - persist_to_workspace:
          root: /
          paths:
            - repo/
            - root/.cargo     # downloaded crates & crates.io index
      - save_cache:
          paths:
            - /root/.cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargo-cache-{{ checksum "compiler-fingerprint" }}

  test:
    executor: lox-ci
    steps:
      - attach_workspace:
          at: /
      - run: cargo test --all
      - run: cargo test --all --features="large-handle"
      - run: cargo test --lib --no-default-features && cargo test --doc --no-default-features
      - run: cargo doc --no-deps

  fuzz:
    executor: lox-ci
    steps:
      - attach_workspace:
          at: /
      - restore_cache:
          keys:
            - cargo-fuzz-cache
      - run: ls fuzz/corpus/ | xargs -L1 -i cargo fuzz run -a -j2 {} -- -max_total_time=5s
      - save_cache:
          paths:
            - fuzz/target/
          key: cargo-fuzz-cache

workflows:
  version: 2.1
  main:
    jobs:
      - check_style
      - build
      - test:
          requires:
            - build
      - fuzz:
          requires:
            - build
