name: CI

on:
  pull_request:
  push:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: --deny warnings

jobs:
  style:
    name: Check basic style
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: LukasKalbertodt/check-basic-style@v0.1
      with:
        files: |
          **/*.{toml,rs}

  check:
    name: 'Build, test & document'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          default: true
          profile: minimal
    - name: Prepare cache key
      run: |
        cargo generate-lockfile
        cp Cargo.lock cache-fingerprint
        echo $RUSTFLAGS >> cache-fingerprint
        echo $(rustc -V) >> cache-fingerprint
    - name: Restore cargo cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('cache-fingerprint') }}
    - name: Build
      run: cargo build --all --lib --bins
    - name: Build Examples
      run: cargo build --examples
    - name: Build Benchmarks
      run: cargo build --benches
    - name: Run tests (default features)
      run: cargo test --all
    - name: Run tests ('large-handle' feature)
      run: cargo test --all --features="large-handle"
    - name: Run tests (no default features)
      run: |
        cargo test --lib --no-default-features
        cargo test --doc --no-default-features
    - name: Generate documenation
      run: cargo doc --no-deps

  fuzz:
    name: 'Run fuzz tests'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          default: true
          profile: minimal
    - name: Install cargo fuzz
      uses: actions-rs/install@v0.1
      with:
        crate: cargo-fuzz
        version: latest
        use-tool-cache: true
    - name: Run fuzz tests
      run: ls fuzz/corpus/ | xargs -L1 -i cargo fuzz run -a -j2 {} -- -max_total_time=15s
    - name: Upload crash artifacts
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: crash-artifacts
        path: fuzz/artifacts/**/crash*
